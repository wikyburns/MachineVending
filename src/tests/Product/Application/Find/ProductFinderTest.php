<?php
/**
 * Created by PhpStorm.
 * User: sebas
 * Date: 25/03/2020
 * Time: 13:09
 */

namespace App\Tests\Product\Application\Find;


use App\Product\Application\Create\ProductCreator;
use App\Product\Application\Create\ProductCreatorRequest;
use App\Product\Application\Find\ProductFinder;
use App\Product\Domain\Product;
use App\Product\Domain\ProductName;
use App\Product\Infrastructure\Persistance\InMemoryProductRepository;
use PHPUnit\Framework\TestCase;

class ProductFinderTest extends TestCase
{
    private $repository;

    protected function setUp()
    {
        $this->repository = new InMemoryProductRepository();

        // Create a product to found in tests
        $useCase    = new ProductCreator($this->repository);
        $requestDTO = new ProductCreatorRequest('soda', 1.50,10);
        $useCase->create($requestDTO);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function foundProduct()
    {
        $useCase = new ProductFinder($this->repository);

        $productFound = $useCase->find(new ProductName('soda'));

        $this->assertInstanceOf(Product::class, $productFound);

    }

    /** @test */
    public function throwProductNotExist()
    {
        $this->expectExceptionMessage('The product <water> does not exist');

        $useCase = new ProductFinder($this->repository);
        $useCase->find(new ProductName('water'));
    }


}